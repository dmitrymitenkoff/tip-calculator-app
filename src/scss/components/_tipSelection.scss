@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;

.radio {
  font-weight: 700;
  font-size: 2.4rem;
  color: $white;
  line-height: 1;
  transition: 180ms all ease-in-out;

  &:focus-within {
    transform: scale(1.05);
  }
}

// Step 1: Hide the Native Radio Input, but keep it technically accessible to enable proper keyboard interaction and also to maintain access to the :focus state.
.radio__input {
  input[type='radio'] {
    opacity: 0;
    width: 0;
    height: 0;
    display: flex;
    &:checked + .radio__control {
      background-color: $cyan;
      color: $dark-cyan;
    }
    &:focus + .radio__control {
      box-shadow: 0 0 0 0.05rem $white, 0 0 0.15rem 0.1rem $selected-bg;
    }
  }
}

// Step 2: Custom Unchecked Radio Styles
.radio__control {
  display: block;
  width: 14rem;
  height: 4.8rem;
  line-height: 4.8rem;
  background-color: $dark-cyan;
  border: none;
  border-radius: 0.5rem;
  transform: translateY(-0.05em);
  text-align: center;
  cursor: pointer;

  @include responsive(iphoneSE) {
    width: 16rem;
  }
  @include responsive(smartphone) {
    width: 12.6rem;
  }
  @include responsive(smartphoneMedium) {
    width: 14.4rem;
  }
  @include responsive(tablet) {
    width: 14rem;
  }
  @include responsive(desktop) {
    width: 12rem;
  }

  &:focus {
    border: 3px solid $input-border;
    box-shadow: 0 0 0 3px $input-focus-shadow;
    outline: 3px solid transparent;
  }
}

#custom-radio-input {
  background-color: $input-bg-bill-amount;
  color: $input-custom-text;
  opacity: 1;
  font-weight: 700;
  outline: none;
  text-align: right;
  padding-right: 1.781rem;
  font-size: 2.4rem;

  @include responsive(iphoneSE) {
    text-align: center;
    padding: 0;
  }

  &:focus::placeholder {
    color: transparent;
  }

  &:focus {
    border: 2px solid $input-border;
    box-shadow: 0 0 0 1px $input-focus-shadow;
    outline: 2px solid transparent;
  }

  &:not(:focus):not(:placeholder-shown):invalid {
    border: $border-error;
  }

  &:focus:not(:placeholder-shown):invalid {
    border: $border-error;
  }

  &:not(:focus):not(:placeholder-shown):valid {
    border: $border-success;
  }

  @include tipPlaceholder;
}

.visually-hidden {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.custom {
  position: relative;
}

.customSmall {
  position: absolute;
  top: -20%;
  right: 0;
}
